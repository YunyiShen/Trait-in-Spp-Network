color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
ggplot(temp1[,c(-1,-3,-4,-5,-7,-8)],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
temp1 = data.frame(point = "model fit"
, mean = mean.par
, low=BI.low.par
, high = BI.high.par
, name = Parameter )
require(ggplot2)
ggplot(temp1[,c(-1,-3,-4,-5,-7,-8)],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
ggplot(temp1[c(-1,-3,-4,-5,-7,-8),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
plot(contri[,8])
contri = mcmc(contri)
plot(contri[,8])
sum(contri[,8]>0)/5000
sum(contri[,11]>0)/5000
plot(contri[,11])
H = Hamiltonian_posterior(kk$means,envX,distM_full,link_map,distM_mainland,link_mainland =  link_mainland * exp(-distM_mainland),int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
mcmc_iter = nrow(kk$theta.mcmc$beta_occu)
sample_temp = as.list(1:mcmc_iter)
post_para = lapply(sample_temp,function(k,posterior){
lapply(posterior,function(post,k){post[k,]},k=k)
},posterior = kk$theta.mcmc)
contri = sapply(post_para,Hamiltonian_posterior,
envX,distM_full,link_map,
distM_mainland,link_mainland =  link_mainland * exp(-2*distM_mainland),
int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
contri = mcmc(t(contri))
mean.par = apply(contri,2,mean)
BI.low.par = apply(contri,2,quantile,probs = .025)
BI.high.par = apply(contri,2,quantile,probs = .975)
Parameter = colnames(contri)
temp1 = data.frame(point = "model fit"
, mean = mean.par
, low=BI.low.par
, high = BI.high.par
, name = Parameter )
require(ggplot2)
ggplot(temp1,aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
Parameter
ggplot(temp1[-c(1,3,5,7),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
BI.high.par = apply(contri,2,quantile,probs = .95)
mean.par = apply(contri,2,mean)
BI.low.par = apply(contri,2,quantile,probs = .05)
BI.high.par = apply(contri,2,quantile,probs = .95)
Parameter = colnames(contri)
temp1 = data.frame(point = "model fit"
, mean = mean.par
, low=BI.low.par
, high = BI.high.par
, name = Parameter )
require(ggplot2)
ggplot(temp1[-c(1,3,5,7),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
useful_H = contri[,-c(1,3,5,7)]
ggplot(data = useful_H)+geom_violin()
ggplot(data = data.frame( useful_H))+geom_violin()
mpg
?reshape
?melt
reshape(useful_H)
reshape(useful_H,direction = "long")
install.packages("reshape2")
require(reshape2)
melt(useful_H)
temp = data.frame("model_fit",useful_H)
melt(temp)
useful_Ham = melt(temp)
ggplot(data = useful_Ham,aes(x=variable,y=value))+geom_violin()
temp = data.frame("modelfit",contri)
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violin()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violin()
temp = data.frame("modelfit",contri[,-c(1,3,5,7)])
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violin()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()
contri = cbind(contri,contri[,1]+contri[,4],contri[,5]+contri[,8])
colnames(contri)=c(colnames(contri[,1:9]),"combine_spp1","combine_spp2")
colnames(contri)
temp = data.frame("modelfit",contri[,-c(1,3,5,7,4,8)])
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violin()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violine()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_violin()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+boxplot()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
temp = data.frame("modelfit",contri[,-c(1,3,5,7,4,8)])
colnames(temp)
colnames(temp) = c("id","Fisher_intra","Marten_intra","Association","Fisher_mainland","Marten_mainland")
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggsave("FM_mainland_island.jpg")
kk$means
load("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/R/FM_Mainland_island.RData")
source("misc_island.R")
require(coda)
H = Hamiltonian_posterior(kk$means,envX,distM_full,link_map,distM_mainland,link_mainland =  link_mainland * exp(-distM_mainland),int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
mcmc_iter = nrow(kk$theta.mcmc$beta_occu)
sample_temp = as.list(1:mcmc_iter)
post_para = lapply(sample_temp,function(k,posterior){
lapply(posterior,function(post,k){post[k,]},k=k)
},posterior = kk$theta.mcmc)
contri = sapply(post_para,Hamiltonian_posterior,
envX,distM_full,link_map,
distM_mainland,link_mainland =  link_mainland * exp(-2*distM_mainland),
int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
contri = mcmc(t(contri))
mean.par = apply(contri,2,mean)
BI.low.par = apply(contri,2,quantile,probs = .05)
BI.high.par = apply(contri,2,quantile,probs = .95)
Parameter = colnames(contri)
temp1 = data.frame(point = "model fit"
, mean = mean.par
, low=BI.low.par
, high = BI.high.par
, name = Parameter )
require(ggplot2)
ggplot(temp1[-c(1,3,5,7),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
contri = cbind(contri,contri[,1]+contri[,4],contri[,5]+contri[,8])
colnames(contri)=c(colnames(contri[,1:9]),"combine_spp1","combine_spp2")
temp = data.frame("modelfit",contri[,-c(1,3,5,7,4,8)])
colnames(temp) = c("id","Fisher_intra","Marten_intra","Association","Fisher_mainland","Marten_mainland")
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
require(reshape2)
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
?geom_boxplot
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot(outlier.size = 0)+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot(outlier.size = .5)+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggsave("FM_postH.jpg")
load("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/R/Results/imperfect_obs/FM_Imp_obs_20K.RData")
source("misc_island.R")
require(coda)
H = Hamiltonian_posterior(kk$means,envX,distM_full,link_map,distM_mainland,link_mainland =  link_mainland * exp(-distM_mainland),int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
mcmc_iter = nrow(kk$theta.mcmc$beta_occu)
sample_temp = as.list(1:mcmc_iter)
post_para = lapply(sample_temp,function(k,posterior){
lapply(posterior,function(post,k){post[k,]},k=k)
},posterior = kk$theta.mcmc)
contri = sapply(post_para,Hamiltonian_posterior,
envX,distM_full,link_map,
distM_mainland,link_mainland =  link_mainland * exp(-2*distM_mainland),
int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
contri = mcmc(t(contri))
colnames(contri)
contri = cbind(contri,contri[,1]+contri[,4],contri[,5]+contri[,8])
colnames(contri)=c(colnames(contri[,1:9]),"combine_spp1","combine_spp2")
mean.par = apply(contri,2,mean)
BI.low.par = apply(contri,2,quantile,probs = .05)
BI.high.par = apply(contri,2,quantile,probs = .95)
Parameter = colnames(contri)
temp1 = data.frame(point = "model fit"
, mean = mean.par
, low=BI.low.par
, high = BI.high.par
, name = Parameter )
require(ggplot2)
ggplot(temp1[-c(1,3,5,7),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
colnames(temp1)
Parameter
ggplot(temp1[-c(1,4,5,8),],aes(x=name, y=mean, colour = point)) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1) +
#geom_line() +
geom_point()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("value")+
xlab("parameter")
temp = data.frame("modelfit",contri[,-c(1,5,4,8)])
colnames(temp)
colnames(temp) = c("id","Fisher_intra","Fisher_inter","Marten_intra","Marten_inter","Association","Fisher_mainland","Marten_mainland")
temp = melt(temp,value.name = "posterior_negH")
require(reshape2)
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggsave("FM_stepping.jpg")
H = Hamiltonian_posterior(kk$means,envX,distM_full,link_map,distM_mainland,link_mainland =  link_mainland * exp(-distM_mainland),int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
mcmc_iter = nrow(kk$theta.mcmc$beta_occu)
sample_temp = as.list(1:mcmc_iter)
post_para = lapply(sample_temp,function(k,posterior){
lapply(posterior,function(post,k){post[k,]},k=k)
},posterior = kk$theta.mcmc)
contri = sapply(post_para,Hamiltonian_posterior,
envX,distM_full,link_map,
distM_mainland,link_mainland =  link_mainland * exp(-distM_mainland),
int_range_intra="nn",int_range_inter="nn",Z = Z_sample)
contri = mcmc(t(contri))
contri = cbind(contri,contri[,1]+contri[,4],contri[,5]+contri[,8])
colnames(contri)=c(colnames(contri[,1:9]),"combine_spp1","combine_spp2")
require(reshape2)
temp = data.frame("modelfit",contri[,-c(1,5,4,8)])
colnames(temp) = c("id","Fisher_intra","Fisher_inter","Marten_intra","Marten_inter","Association","Fisher_mainland","Marten_mainland")
temp = melt(temp,value.name = "posterior_negH")
ggplot(data = temp,aes(x=variable,y=posterior_negH))+geom_boxplot()+
theme(axis.text.x = element_text(size = 10,
color = "black",
vjust = 1,
hjust = 1,
angle = 45))+
theme(axis.text.y = element_text(size = 10,
color = 'black',
vjust = 0.5,
hjust = 0)) +
ylab("negativeH")+
xlab("term")
ggsave("FM_stepping.jpg")
load("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/R/FM_Mainland_island.RData")
plot(kk$theta.mcmc$eta_intra)
require(Matrix)
link = "E:/UW Lab jobs/2. ISING Occupancy model/4. DATA/APIS/"
island = read.csv(paste0(link,"CT_posi_only_island.csv"))
nr <- nc <- 6
set.seed <- 123
m  <- matrix(sample(c(rep(0,9), 1),nr*nc, replace=T), nrow=nr, ncol=nc)
m
M1 <- as(m, "dgCMatrix")
M1[1,1]
M1 %*% M1
m
mm = as.data.frame(m)
M2 <- as(mm, "dgCMatrix")
dgCMatrix()
?Matrix
M1
M1[1:2,1:2] = M1[5:6,1:2]
M1
diag(M1)
diag(M1)=1
M1
getwd
getwd()
nr <- nc <- 6
nr <- nc <- 6
set.seed <- 123
m  <- matrix(sample(c(rep(0,9), 1),nr*nc, replace=T), nrow=nr, ncol=nc)
sum(m)/length(m)
M1 <- as(m, "dgCMatrix")
require(Matrix)
M1 <- as(m, "dgCMatrix")
nrow(M1)
m*M1
install.packages("RcppArmadillo")
getwd
getwd()
?RCppArmadillo
??RCppArmadillo
??RcppArmadillo
library(RcppArmadillo)
rsparsematrix()
ww = rsparsematrix(5,5)
ww = rsparsematrix(5,0.1)
?rsparsematrix
ww = rsparsematrix(5,5,0.1)
class(ww)
Rcpp::sourceCpp("./media/yunyi/Academia/UW")
getwd()
Rcpp::sourceCpp("./media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/src/IsingCpp_CFTP_sparse.cpp")
Rcpp::sourceCpp("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/src/IsingCpp_CFTP_sparse.cpp")
Rcpp::sourceCpp("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/src/IsingCpp_CFTP_sparse.cpp")
Rcpp::sourceCpp("/media/yunyi/Academia/UW Lab jobs/2. ISING Occupancy model/1. IsingOccu/1. IsingOccu/src/IsingCpp_CFTP_sparse.cpp")
?IsingSampler
require(IsingSampler)
?IsingSampler
IsingSamplerCpp
graph = Matrix((runif(9)>0.6)*runif(9),3,3)
graph
graph = Matrix((runif(9)>0.6)*runif(9),3,3,sparse = T)
graph = graph + t(graph)
graph
graph = Matrix((runif(9)>0.6)*runif(9),3,3,sparse = T)
graph = graph + t(graph)
graph
diag(graph) = 0
graph
graph
diag(graph)
diag(graph) = 0 * diag(graph)
graph
as(graph,"dgCMatrix")
as(graph,"matrix")
as(graph,"dgCMatrix")
graph[1,1]==graph[3,3]
kk = as(graph,"matrix")
kk
as(kk,"dgCMatrix")
kk
graph = as(kk,"dgCMatrix")
graph
IsingSamplerCpp(1,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L),method = "CFTP",CFTPretry = 10)
IsingSamplerCpp(1,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L))
IsingSamplerCpp(1,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L),exact = T)
IsingSamplerCpp(1,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L),exact = T,constrain = NA)
IsingSamplerCpp(1,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L),exact = T,constrain = matrix(NA,3,1))
ww = runif(3)
ww
ww + NA
ww = IsingSamplerCpp(10000,graph,matrix(0,3,1),beta = 1,nIter = 30,responses = c(-1L,1L),exact = T,constrain = matrix(NA,3,1))
mean(ww)
